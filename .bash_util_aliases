# Git
alias ll='ls -lah'
alias gs='git status'
alias ga='git add'
alias gb='git branch --sort=committerdate'
alias gc='git commit'
alias gp='if grep -r --exclude-dir={.git,tmp,log,coverage,public} -Hn binding.pry .; then echo Please remove breakpoints in the above files; else git push; fi'
alias gd='git diff'
alias go='git checkout'
alias gk='gitk --all&'
alias gx='gitx --all'

#Ctags
alias getctags='ctags -R -f ./.git/tags .'

# IP checks
alias localip="ifconfig | grep 'inet ' | grep -Fv 127.0.0.1 | awk '{print \$2}'"
alias externalip="curl ipecho.net/plain ; echo"

# Shoutout to @rushton
# log-book function, creates a template for working through problems.
# Requires a folder called logbook in the home directory
# Usage: `lb <problem summary>`
# or just `lb` to open the latest logbook
function lb() {
    now=$(date '+%Y-%m-%d')
    # if no parameters provided and logbook entries exist, open the logbook
    # with the maximum date.
    if [[ $# -eq 0 && $(ls ~/logbook | grep "^[0-9].*md$" | wc -l) -gt 0 ]]
    then
        vim ~/logbook/$(ls ~/logbook | grep "^[0-9].*md$" | sort | tail -n1)
        return 0
    elif [[ $# -eq 1 ]]
    then
        echo "$1" >> ~/logbook/$now.md
        echo "===============================================" >> ~/logbook/$now.md
        echo "Started: $(date '+%Y-%m-%d %H:%M:%S')" >> ~/logbook/$now.md
        echo "### 1. Consider the problem youâ€™re attempting to solve" >> ~/logbook/$now.md
        echo "### 2. Describe your method for solving it" >> ~/logbook/$now.md
        echo "### 3. Describe the process of carrying out the method" >> ~/logbook/$now.md
        echo "### 4. Record what happened" >> ~/logbook/$now.md
        echo "### 5. How could it be improved?" >> ~/logbook/$now.md
        echo "Completed: <use: date '+%Y-%m-%d %H:%M:%S'>" >> ~/logbook/$now.md
    elif [[ $# -gt 1 ]]
    then
        echo "Error: too many parameters"
        echo "Usage: lb [<problem summary>]"
        return 1
    fi

    vim ~/logbook/$now.md
}
